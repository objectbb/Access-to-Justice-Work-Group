(function () {
    angular.module('taxidriver').service('da', ['breeze', function (breeze) {
        var addType, DATE, DT, helper, ID;
        var emFactory = function (breeze) {
            // Convert properties between server-side PascalCase and client-side camelCase
            breeze.NamingConvention.camelCase.setAsDefault();
            // Identify the endpoint for the remote data service
            //var serviceRoot = window.location.protocol + '//' + window.location.host + '/';
            var serviceName = ""; // breeze Web API controller
            // the "factory" services exposes two members
            /*
            return {
                manager:  new breeze.EntityManager(serviceName),
                serviceName: serviceName
            };
			*/
            var manager = new breeze.EntityManager(serviceName);
            // get the MetadataStore from the manager and fill it
            var store = manager.metadataStore;
            //metadataFactory.fillMetadataStore(store);
            //var store = metadataStore; // the metadataStore that we'll be filling
            // namespace of the corresponding classes on the server
            var namespace = 'Model'; // don't really need it here 
            // 'Identity' is the default key generation strategy for this app
            var keyGen = breeze.AutoGeneratedKeyType.Identity;
            // Breeze Labs: breeze.metadata-helper.js
            // https://github.com/Breeze/breeze.js.labs/blob/master/breeze.metadata-helper.js
            // The helper reduces data entry by applying common conventions
            // and converting common abbreviations (e.g., 'type' -> 'dataType')
            helper = new breeze.config.MetadataHelper(namespace, keyGen);
            helper.addDataService(store, serviceName);
            // addType - make it easy to add the type to the store using the helper
            addType = function (type) {
                return helper.addTypeToStore(store, type);
            };
            // DataTypes we'll be using
            DT = breeze.DataType;
            DATE = DT.DateTime;
            ID = DT.Int32;
        }
        var dm = emFactory(breeze);
        return {
            loadtable: function (name, data) {
                dm.manager.createEntity(name, {
                    name: 'Acme'
                });
            },
            createtable: function (name, cols) {
                addType({
                    name: name,
                    dataProperties: {
                        id: {
                            type: ID
                        },
                        name: {
                            max: 50,
                            nullOk: false
                        },
                    }
                });
            }
        }
    }]);
})();